---
version: 0.2
phases:
  install:
    commands:
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
  pre_build:
      commands:
        - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:latest"'@' hello-k8s.yml
        - cat hello-k8s.yml
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - docker login -u fanhousanbu -p xcworld
      - docker build --tag $REPOSITORY_URI:latest .

  post_build:
    commands:
      - echo 'eyJwYXlsb2FkIjoiVE9sYlA4NlhxWWU5bTg4djZ2MDQybDEvcGdxMFBwS0lhRGZnSFl0NkZncTVwMnJBNXc2VkZqYnlKUnhSTDBvWnBSZFMxQ0RGWXlNMDRvZnJaaVZHdlRNNVo3TlB5NU91VjNpdWJhajJTYkltdUY0b3RJRXozdUJMcDZQdWEyVjVSanBDRG93clgzbHAyZGZTdUg1aDJMU1Q1bDhZQ1NYUFp4VE1laXJKN1J1cnlmRkxSWnpRSzBLS2N6N3BOemY0dElDeGdhR1FmeXdoOFVLdDVCcjRLSkMyTXNjZldaQmV5dzdEZjVCME56b081ZGU2MjJLQlpUUkhXM1NDZUF1QkgrMHF1bzM5OFZTNGpjekoxSHJNMm9OOWdLNCs1UVVSYmY3U2VSd3ZwckRuZU93TTM3ekxJNXhzZEFOdzlYUGRuNlpObWpqR3ZQbW1ubys5U1dhNk5lODJ0aHZiM0s0emNuaUVpVitXeTQ3VGZtZ01Qd05iK2t1LzBsSEx4cDBWVjM2R2RiaTFvYVdKWmhySVhiZmtTS3RtSGhQeWpMNDQ2SmovR3Y3ajRESWQ5dFZPYXAwQ0lJWmZDV2ZjaVovYnEwY2kwbDl4SHhVeEpjczlYZVU1ekVUUDJ2NlNTbGRlUTNyRGFGeGxrTDVuZlBZODdKL0FNdkRLdzBsVkhRWVUrVVF1TEZic25IaDU2SGZwcldVNlVhd0hvWnZBVUJmd0R4Y3k2eVJxVCs4aG1BdlQ3TUlod1pSNi81d3hXTm5DMTFHK3dUV3RYOE9idkU1c3hpRlZvbGxJai9RN3pJeHF1LzhReVEwRFk3VGI5STBhMjlqTlFlcnAxVS9YNm9pRWtGZktLMCt2NnAwWnZWeEJzdjhJczdORkRkS0lFdDVhczVWZzFYbUlOSnRJTlV5TjB6UFBRSXhlL2RmanJUd2hEOENkSW9CZTNHOFJ2aGQrOUpCV1FFTnRZbm1Fd3N6cEhlYTkvNkdodC9XWDF3TER6NDNxUkZZZHY4ejd5c3hRZWhkejlRVENpR0VsQmtMNForUnhKOStsMW94bUFCRkh0dkJFR0NvNHJFbnlpdDBDVlBqRHVxcURoOTBYUTM3TDhmWktkalN3QkkvSWpWeEVqNzVVUjc2WlBRTWNuUGJleno1a2ZTMk5yTU5BT094bk53TGpmN0lQUWN0MVZqVC9Jd05TeGsvYnl5R3Q2Z3dCNVpxVUJZMldsN1BUZ21OT0ZXc3RjejVWOHd1UHQ1WlM0NUlxaHV6WXcyWlYrckVLN1hUSjl2LzYzOEZsdFA0UEVxbGJaelp2R1o1MjFPWkdseXdwSjB5RmVPMDV2dC9EZ1JzWDl5WDFCdGh3N0xEN2x4ZVAxczlvY0RBdjhjM1ZNQ0gwMVVaVDF6M2UiLCJkYXRha2V5IjoiQVFJQkFIaldYdzZaU3NlQ2RBbCtOb2RGWXdmL2hSbXNMQTJuZ2E1QkJmdmJrUG5PYndFMDJ3TVBxTmowSStLZ2V5WVVXQlAxQUFBQWZqQjhCZ2txaGtpRzl3MEJCd2FnYnpCdEFnRUFNR2dHQ1NxR1NJYjNEUUVIQVRBZUJnbGdoa2dCWlFNRUFTNHdFUVFNR05VYk1TMzFid2gvWWIyVkFnRVFnRHNGbzZUeUNLYlQ1cWZMYVRidmxNdkZuSWFzeUx5OU96MXhLV0lxVmpFN0wweGVpNFBMU2dBUWM4d0pDUFlvU2FmNnFFVk83Q3pwaXVXWk9nPT0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE2ODY4NjQ1NzN9' | docker login --username AWS --password-stdin public.ecr.aws/f0e5p9a6
      - docker push $REPOSITORY_URI:latest
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - kubectl apply -f hello-k8s.yml
      - printf '[{"name":"hello-k8s","imageUri":"%s"}]' $REPOSITORY_URI:latest > build.json
artifacts:
  files: build.json
